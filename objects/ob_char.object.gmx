<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_char</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(0,0,ob_draw_score); //Skoru ekrana yazacak objeyi oluşturuyor.

grav=0.85; //yer çekimi değeri
vsp=0;     //yatay hız
jumpspeed = 17 //zıplama hızı
counter = 0    //sayıcı(ilk duvarın sabit yerde oluşması için lazım)

image_speed=0.33 // animasyon hızı
y=room_height/3 // karakterin başlangıç y değeri
x=room_width/9 // karakterin başlangıç x değeri

global.wall_speed = 15 //Duvar hızı (global olma nedeni duvar objesini etkileyeceği için)
global.playing = 0 //Oyun başlatmak için
global.skor = 0 // skor

spawn=45
alarm[0] = 1 //alarm başlatıcı
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (counter &lt; 2) //eğer sayıcı 1 artarsa
{
instance_create(550,550,ob_wall) //ilk objeyi sabit x y de oluşturur.
counter +=1;
}
if(global.playing=1) 
 {
 global.wall_speed += 0.10 // duvarın gelme hızı skor 1 artana kadar hızlanır.
 spawn-= 0.05
 alarm[0] = 10
 }
if (global.playing=1) // eğer oyun başladıysa
{
    
    position_wall = 0 // duvarın konumunu sıfırlıyoruz
    randomize(); //her seferinde farklı değer üretmesi için (C dilinde srand a eşit)

    position_wall = floor(600) - irandom(floor(150)); // 600 - (150 ile 0 arası) değer oluşur.
    
    wall = instance_create(1280,position_wall,ob_wall); //1280 room sonudur. position wall yukarda çağırılan değer.
    wall_dead = instance_create(1280,position_wall+1,ob_dead); //duvara çarpınca oyunu bitirmek için.
    
    alarm[0]= spawn // 1.5 snde tetikler.
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//kontorller 
jump= mouse_check_button(mb_left) // ekrana tıklanırsa 1 değeri döner.
if (global.playing=1) 
{ 
 if(vsp&lt;15) // hızın 15 den küçükse ( game makerda y ekseni terstir.)
 {
 vsp +=grav; // yer çekimi değeri eklenir ve aşağı düşeriz.
 }
 if (place_meeting(x,y+1,ob_wall))
 {
 vsp= jump * -jumpspeed; //zıplama komutu
 }

 if (place_meeting(x,y+vsp,ob_wall))
    {
        while (!place_meeting(x,y+sign(vsp),ob_wall))
        {
            y+=sign(vsp);   
        }
        vsp = 0
        global.skor+=1
    }
y +=vsp; //yukarı doğru hız kazandıran komut
}
else // oyun başlamadıysa
{
    instance_create(0,0,ob_draw_play) // başlamak için ekrana dokunun yazdıran objeyi oluştururç
    if(mouse_check_button_pressed(mb_left)) // ekrana tıklanırsa
    {
        alarm[0]=1 // alarm başlar
        global.playing=1 // oyun başlar
    }
}
if(y &gt; 720) //eğer aşağı düşerse. Kaydeder ver yeniden başlar.
{

ini_open("score.ini"); // ini dosyasını aç
ini_write_real("score","highscore",global.highscore); // yeni değeri yaz
ini_close(); // ini dosyasını kapat
game_restart() // yeniden başlat
}

quit = keyboard_check(vk_alt) + keyboard_check_pressed(vk_f4)
if(quit = 2)
{
game_end()
}

// yüksek skor.
if (global.skor &gt; global.highscore) //eğer skor değeri highscoredan büyük olursa 
{
global.highscore = global.skor    //highscore score değeri olacak

}
//Animasyonlar
if(global.char_select == 0)
{
    if (place_meeting(x,y+1,ob_wall))
    {
        sprite_index = spr_run; // karakterin görsel indexini koşma animasyonu yapar.
    }

    else
    {
        if (vsp &lt; 0) //eğer düşey hızımız 0 dan küçük ise (GAME MAKER DA Y EKSENİ TERS ALINMIŞTIR.)   
        {
        sprite_index = spr_jump; //karakterin görsel indexini zıplama animasyonu olarak ayarlar.
        } 
        else //eğer düşey hızımız 0 ya da 0 dan büyük ise
        {
        sprite_index = spr_fall; // karakterin görsel indexini düşme animasyonu yapar.
        }
    }
}

else if(global.char_select == 1)
{
    if (place_meeting(x,y+1,ob_wall))
    {
        sprite_index = spr_ng_run; // karakterin görsel indexini koşma animasyonu yapar.
    }

    else
    {
        if (vsp &lt; 0) //eğer düşey hızımız 0 dan küçük ise (GAME MAKER DA Y EKSENİ TERS ALINMIŞTIR.)   
        {
        sprite_index = spr_ng_jump; //karakterin görsel indexini zıplama animasyonu olarak ayarlar.
        } 
        else //eğer düşey hızımız 0 ya da 0 dan büyük ise
        {
        sprite_index = spr_ng_fall; // karakterin görsel indexini düşme animasyonu yapar.
        }
    }
}
else if(global.char_select == 2)
{
    if (place_meeting(x,y+1,ob_wall))
    {
        sprite_index = spr_ag_run; // karakterin görsel indexini koşma animasyonu yapar.
    }

    else
    {
        if (vsp &lt; 0) //eğer düşey hızımız 0 dan küçük ise (GAME MAKER DA Y EKSENİ TERS ALINMIŞTIR.)   
        {
        sprite_index = spr_ag_jump; //karakterin görsel indexini zıplama animasyonu olarak ayarlar.
        } 
        else //eğer düşey hızımız 0 ya da 0 dan büyük ise
        {
        sprite_index = spr_ag_fall; // karakterin görsel indexini düşme animasyonu yapar.
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="ob_dead">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
ini_open("score.ini"); // ini dosyasını aç
ini_write_real("score","highscore",global.highscore); // yeni değeri yaz
ini_close(); // ini dosyasını kapat
game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
